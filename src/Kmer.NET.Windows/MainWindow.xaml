<Window
    x:Class="Kmer.NET.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Kmer.NET.Windows"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page x:Name="RootPage">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="600" />
            </Grid.ColumnDefinitions>
            <Grid.ChildrenTransitions>
                <AddDeleteThemeTransition />
            </Grid.ChildrenTransitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="SingleColumn" />
                    <VisualState x:Name="DoubleColumn">
                        <VisualState.Setters>
                            <Setter Target="LeftScrollviewer.(Grid.ColumnSpan)" Value="1" />
                            <Setter Target="LeftBottomGrid.(Grid.ColumnSpan)" Value="1" />
                            <Setter Target="InfoBar.(Grid.ColumnSpan)" Value="1" />
                            <Setter Target="RightGrid.Visibility" Value="Visible" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border VerticalAlignment="Stretch" Grid.ColumnSpan="2" Padding="20 0">
                <TextBlock Text="Kmer-SSR.NET" VerticalAlignment="Center" />
            </Border>
            <ScrollViewer x:Name="LeftScrollviewer" Grid.Row="1" Grid.ColumnSpan="2">
                <StackPanel Spacing="10" Padding="20">
                    <StackPanel.ChildrenTransitions>
                        <RepositionThemeTransition />
                        <AddDeleteThemeTransition />
                    </StackPanel.ChildrenTransitions>
                    <TextBlock Text="Select input file" />
                    <Grid ColumnSpacing="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{x:Bind viewModel.InputFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button IsEnabled="False" Content="Browse" Grid.Column="1" Tag="Input" Click="BrowseFileButton_Click" />
                    </Grid>
                    <TextBlock Text="Select output file" />
                    <Grid ColumnSpacing="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{x:Bind viewModel.OutputFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button IsEnabled="False" Content="Browse" Grid.Column="1" Tag="Output" Click="BrowseFileButton_Click" />
                    </Grid>
                    <CheckBox IsChecked="{x:Bind viewModel.AllowNonAtomic, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Report non-atomic SSRs" />
                    <CheckBox IsChecked="{x:Bind viewModel.Exhaustive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Exhaustive search: disable all filters and SSR validation to report every SSR" />
                    <TextBlock Text="Alphabet" />
                    <TextBox Text="{x:Bind viewModel.Alphabet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Text="Search specific SSRs" />
                    <TextBox Text="{x:Bind viewModel.EnumeratedSsrs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             IsEnabled="{x:Bind viewModel.Exhaustive.Equals(x:False), Mode=OneWay}" />
                    <TextBlock Text="Periods" />
                    <TextBlock Text="A comma-separated list of period sizes. Inclusive ranges are also supported using a hyphen."
                       Foreground="{ThemeResource SystemBaseMediumColor}" Margin="0 -10 0 0"
                       TextWrapping="Wrap" />
                    <TextBox Text="{x:Bind viewModel.Periods, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock Text="Search only sequences with length in range" />
                    <StackPanel Orientation="Horizontal" Spacing="10">
                        <TextBox Text="{x:Bind viewModel.MinSequenceLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock VerticalAlignment="Center" Text="-" />
                        <TextBox Text="{x:Bind viewModel.MaxSequenceLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <TextBlock Text="Keep only SSRs with length in range" />
                    <StackPanel Orientation="Horizontal" Spacing="10">
                        <TextBox Text="{x:Bind viewModel.MinSsrLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{x:Bind viewModel.Exhaustive.Equals(x:False), Mode=OneWay}" />
                        <TextBlock VerticalAlignment="Center" Text="-" />
                        <TextBox Text="{x:Bind viewModel.MaxSsrLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{x:Bind viewModel.Exhaustive.Equals(x:False), Mode=OneWay}" />
                    </StackPanel>
                    <TextBlock Text="Keep only SSRs with repeating frequency in range" />
                    <StackPanel Orientation="Horizontal" Spacing="10">
                        <TextBox Text="{x:Bind viewModel.MinRepeat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{x:Bind viewModel.Exhaustive.Equals(x:False), Mode=OneWay}" />
                        <TextBlock VerticalAlignment="Center" Text="-" />
                        <TextBox Text="{x:Bind viewModel.MaxRepeat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 IsEnabled="{x:Bind viewModel.Exhaustive.Equals(x:False), Mode=OneWay}" />
                    </StackPanel>
                    <Grid ColumnSpacing="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Spacing="10">
                            <TextBlock Text="Max size of the tasks queue" />
                            <TextBox Text="{x:Bind viewModel.MaxTaskQueueSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalAlignment="Left" />
                        </StackPanel>
                        <StackPanel Grid.Column="1" Spacing="10">
                            <TextBlock Text="Threads" />
                            <TextBox Text="{x:Bind viewModel.Threads, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalAlignment="Left" />
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </ScrollViewer>
            <Grid x:Name="LeftBottomGrid" Grid.Row="2" Grid.ColumnSpan="2" Padding="20">
                <Button HorizontalAlignment="Left" VerticalAlignment="Center" Click="RestoreDefaultOptionsButton_Click">
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <FontIcon Glyph="&#xE777;" FontSize="12" VerticalAlignment="Center" />
                        <TextBlock Text="Restore default" />
                    </StackPanel>
                </Button>
                <Button HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource AccentButtonStyle}" Click="RunButton_Click">
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <FontIcon Glyph="&#xE768;" FontSize="12" VerticalAlignment="Center" />
                        <TextBlock Text="Run" />
                    </StackPanel>
                </Button>
            </Grid>
            <Grid x:Name="RightGrid" Visibility="Collapsed" Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Background="{ThemeResource ElevatedLayerBackgroundBrush}" BorderBrush="{ThemeResource CardStrokeColorDefault}" BorderThickness="1 0 0 0">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ProgressRing IsIndeterminate="False" Width="400" Height="400" Foreground="{ThemeResource SystemAccentColor}" Background="{ThemeResource SystemBaseLowColor}"
                                  Maximum="{x:Bind viewModel.ProgressMaximum, Mode=OneWay}" Value="{x:Bind viewModel.ProgressValue, Mode=OneWay}" />
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock Text="{x:Bind viewModel.ProgressPercentage, Mode=OneWay}" HorizontalAlignment="Center" FontSize="72" FontWeight="SemiBold" />
                        <TextBlock Text="{x:Bind viewModel.TimeTicked, Mode=OneWay}" HorizontalAlignment="Center" FontSize="36" FontWeight="SemiLight" />
                    </StackPanel>
                </Grid>
            </Grid>
            <InfoBar x:Name="InfoBar" Grid.Row="1" Grid.ColumnSpan="2"
                     VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="20 0"
                     Severity="Error" Message="100" IsOpen="False" />
        </Grid>
    </Page>
</Window>
